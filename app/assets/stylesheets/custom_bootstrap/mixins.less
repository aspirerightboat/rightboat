.navbar-overrides(@gutter) {
  @rb-navbar-padding-horizontal: floor((@gutter / 2));

  .navbar-collapse {
    padding-right: @rb-navbar-padding-horizontal;
    padding-left:  @rb-navbar-padding-horizontal;
  }

  .container {
    > .navbar-header,
    > .navbar-collapse {
      margin-right: -@rb-navbar-padding-horizontal;
      margin-left: -@rb-navbar-padding-horizontal;
      @media (min-width: @grid-float-breakpoint) {
        margin-right: 0;
        margin-left:  0;
      }
    }
  }

  .navbar-brand {
    padding: 0;
    @media (min-width: @grid-float-breakpoint) {
      .navbar > .container & {
        margin-left: -@rb-navbar-padding-horizontal;
      }
    }
  }

  .navbar-toggle {
    margin-right: @rb-navbar-padding-horizontal;
  }
  .navbar-nav {
    margin: (@navbar-padding-vertical / 2) - @rb-navbar-padding-horizontal;
    @media (min-width: @grid-float-breakpoint) {
      margin: 0;
    }
  }
}

.assign-gutter(@property) {
  @{property}: @xs-gutter;
  @media (min-width: @screen-sm-min) { @{property}: @sm-gutter; }
  @media (min-width: @screen-md-min) { @{property}: @md-gutter; }
  @media (min-width: @screen-lg-min) { @{property}: @lg-gutter; }
}

.make-rb-grid-columns(@gutter, @prefix: '') {
  // Common styles for all sizes of grid columns, widths 1-12
  .col(@index) { // initial
    @item: ~"@{prefix} .col-xs-@{index}, @{prefix} .col-sm-@{index}, @{prefix} .col-md-@{index}, @{prefix} .col-lg-@{index}";
    .col((@index + 1), @item);
  }
  .col(@index, @list) when (@index =< @grid-columns) { // general; "=<" isn't a typo
    @item: ~"@{prefix} .col-xs-@{index}, @{prefix} .col-sm-@{index}, @{prefix} .col-md-@{index}, @{prefix} .col-lg-@{index}";
    .col((@index + 1), ~"@{list}, @{item}");
  }
  .col(@index, @list) when (@index > @grid-columns) { // terminal
    @{list} {
      padding-left:  (@gutter / 2);
      padding-right: (@gutter / 2);
    }
  }
  .col(1); // kickstart it
}

.AzureSection() {
  color: @rb-color-dark;
  background-color: @rb-color-primary;
}
