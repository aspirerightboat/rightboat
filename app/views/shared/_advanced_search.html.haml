#advanced-search-wrapper.navbar-static-top
  = image_tag 'anchor.png', class: 'anchor-img', alt: ''
  #advanced-search.container
    %button.close(aria-label="Close" type="button")
      %span(aria-hidden="true")
        %small Close
        &times;
    %h2
      - if controller_name == 'search'
        Refine Search <small>Here you can filter and refine the <b>#{@boats.total_count}</b> boats of your search result</small>
      - else
        Advanced Search
      %button.like-link.reset-adv-search Clear Search

    = form_tag search_path, method: :get, class: 'row' do
      = hidden_field_tag :year_min
      = hidden_field_tag :year_max
      = hidden_field_tag :price_min
      = hidden_field_tag :price_max
      = hidden_field_tag :length_min
      = hidden_field_tag :length_max

      .col-xs-12
        .form-group.row
          .col-xs-4.col-sm-2
            = label_tag :keywords, 'Keywords'
          .col-xs-8.col-sm-10
            = text_field_tag :q, params[:q], class: 'form-control', placeholder: 'e.g. 4 berths'
      .col-sm-6.col-xs-12
        .form-group.row
          .col-xs-4
            = label_tag :manufacturer_model, 'Manufacturer / Model'
          .col-xs-8
            = text_field_tag :manufacturer_model, params[:manufacturer_model], class: 'select-black select-full tags-input', placeholder: 'e.g. Princess'
        .range-slider-wrapper.row
          .col-xs-5.col-sm-4
            = label_tag :year
          .col-xs-7.col-sm-8
            = slider_tag(:year)
        .range-slider-wrapper.row.length-input-group
          .col-xs-5.col-sm-4
            .rb-control-group
              .rb-control
                = label_tag :length
              .rb-control-group-addon
                = select_tag :length_unit, length_unit_options, class: 'select-white select-sm select-general'
          .col-xs-7.col-sm-8
            = slider_tag(:length, unit: current_length_unit) # max in meter
        .range-slider-wrapper.row
          .col-xs-5.col-sm-4
            .rb-control-group
              .rb-control
                = label_tag :price
              .rb-control-group-addon
                = currency_tag :currency, current_currency, class: 'select-white select-sm select-currency'
          .col-xs-7.col-sm-8
            = slider_tag(:price, unit: current_currency.try(:name) || 'GBP')
        .form-group.row
          .col-xs-4
            = label_tag :tax_status, nil, class: 'without-top-pad'
          .col-xs-8
            = check_box_tag 'tax_status[paid]', true, (params[:tax_status] || {})['paid'], class: 'inverse'
            = label_tag :tax_status_paid, 'Paid', class: 'tax-paid' do
              Paid
              %i
            = check_box_tag 'tax_status[unpaid]', true, (params[:tax_status] || {})['unpaid'], class: 'inverse'
            = label_tag :tax_status_unpaid, 'Unpaid', class: 'tax-not-paid' do
              Unpaid
              %i
      .col-sm-6.col-xs-12
        .form-group.row
          .col-xs-4
            = label_tag :boat_type
          .col-xs-8
            = radio_button_tag :boat_type, '', params[:boat_type].blank?, id: 'adv_boat_type_all'
            = label_tag :boat_type_all, 'All', for: 'adv_boat_type_all'
            = radio_button_tag :boat_type, 'Power', params[:boat_type] == 'Power', id: 'adv_boat_type_power'
            = label_tag :boat_type_power, 'Power', for: 'adv_boat_type_power'
            = radio_button_tag :boat_type, 'Sail', params[:boat_type] == 'Sail', id: 'adv_boat_type_sail'
            = label_tag :boat_type_sail, 'Sail', for: 'adv_boat_type_sail'
        .form-group.row
          .col-xs-4
            = label_tag :category
          .col-xs-8
            = select_tag 'category[]', options_from_collection_for_select(BoatCategory.order(:name), :id, :name, params[:category]), class: 'select-black select-full select-general', multiple: 'multiple'
        .form-group.row
          .col-xs-4
            = label_tag :country
          .col-xs-8
            - general_options = general_facets[:countries_data].map { |id, name, count| ["#{name} (#{count})", id] }
            - filtered_data = (@search_facets[:countries_data].to_json if @search_facets)
            - selected_ids = [*(params[:country] || [])].to_json if params[:country].present?
            = select_tag 'country[]', options_for_select(general_options), class: 'select-black select-full multiple-country-select', multiple: 'multiple', data: {filtered_data: filtered_data, selected_ids: selected_ids}
        .form-group.row
          .col-xs-4
            = label_tag :ref_no, 'Ref No.'
          .col-xs-8
            = text_field_tag :ref_no, '', placeholder: 'e.g. RB48573', class: 'form-control'
        .form-group.row
          .col-xs-4
            = label_tag :new_used, 'New / Used', class: 'without-top-pad'
          .col-xs-8
            = check_box_tag 'new_used[new]', true, (params[:new_used] || {})['new'], class: 'inverse'
            = label_tag :new_used_new, 'New'
            = check_box_tag 'new_used[used]', true, (params[:new_used] || {})['used'], class: 'inverse'
            = label_tag :new_used_used, 'Used'
        .form-group.row
          .col-xs-4.save-search
            = link_to 'Save this search', member_saved_searches_path(params.except(:controller, :action)),
                       method: :post, remote: true, class: 'btn-flat',
                       data: {'require-login' => true, 'login-title' => 'Please sign in or join as a member to save your search.'}
            .result-popup
              Your search has been saved and you can view, re-run or manage this in #{link_to 'My Saved Searches', member_saved_searches_path}.
          .col-xs-8
            %button.btn-flat(type="submit") Search
      .result-info.col-sm-12.col-md-12.text-center
        - if @boats
          Results:
          = @boats.total_count >= 10000 ? '10,000 plus' : @boats.total_count
          boats fit your criteria

- content_for :body_scripts do
  :javascript
    window.currencyRates = #{Currency.pluck(:name, :rate).to_h.to_json};
